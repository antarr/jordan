name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    strategy:
      matrix:
        ruby-version: ['3.2']
    
    env:
      RAILS_ENV: test
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ragged_test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Copy CI database configuration
      run: cp config/ci.database.yml config/database.yml
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
    
    - name: Set up Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
    
    - name: Set up test database
      run: |
        bin/rails db:drop || true
        bin/rails db:create
        bin/rails db:migrate
      env:
        RAILS_ENV: test
    
    - name: Precompile assets for test
      run: bin/rails assets:precompile
      env:
        RAILS_ENV: test
    
    - name: Run security checks
      run: |
        bin/brakeman --quiet --format plain
    
    - name: Run RSpec tests (including Capybara)
      run: |
        bundle exec rspec --format progress --format RspecJunitFormatter --out tmp/rspec_results.xml
      env:
        CHROME_BIN: /usr/bin/google-chrome
    
    - name: Merge coverage reports
      run: |
        bundle exec rake coverage:merge
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload RSpec test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: rspec-results
        path: tmp/rspec_results.xml
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: coverage/
    
    - name: Upload JavaScript coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: js-coverage-report
        path: coverage-js/
        if-no-files-found: ignore
    
    - name: Upload merged coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: merged-coverage-report
        path: coverage-merged/
        if-no-files-found: ignore

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy notification
      run: echo "Deploy job would run here for main branch"